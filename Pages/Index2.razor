@page "/"
@using TreeBuilder.Services
@inject TreeBuilder.Services.StorageService StorageService
@inject RenderService RenderService

@namespace TreeBuilder.ComponentsRedux

<div class="container">
    <div class="row">
        <div class="col col-6">
            <button @onclick="AddGroup">Add a group</button><br />
            <button @onclick="AddInterface">Add an interface</button><br />
            <button @onclick="AddIntegrationNode">Add an integration node</button><br />
        </div>
        @*<div class="col col-6">
            <!-- Where the floating Node will go -->
            <IntegrationNode Name="GhostNode" @ref="nodeRef"></IntegrationNode>
        </div>*@
    </div>
    <div class="row">
        <div class="col col-6">
            <GroupField @ref="fieldRef"></GroupField>
        </div>
        <div class="col col-6">
            <IntegrationField @ref="integrationRef"></IntegrationField>
        </div>
    </div>
    
</div>

@code {

    public GroupField fieldRef { get; set; }
    public IntegrationField integrationRef { get; set; }

    protected override void OnInitialized()
    {
        
    }

    protected override void OnAfterRender(bool firstRender) {
        if (firstRender) {
            StorageService.GroupField = fieldRef;
            StorageService.IntegrationField = integrationRef;
            RenderService.GroupField = fieldRef;
            RenderService.IntegrationField = integrationRef;
        }
    }

    public void AddGroup() {
        fieldRef.GroupItems.Add(new Group());
        Console.WriteLine(fieldRef.GroupItems.Count);
        StateHasChanged();
        StorageService.SaveToSessionStorage();
        RenderService.Redraw();
        Console.WriteLine(integrationRef.ToString());
    }

    public void AddInterface() {
        fieldRef.GroupItems.Add(new Interface());
        StorageService.SaveToSessionStorage();
        RenderService.Redraw();
    }

    public void AddIntegrationNode() {
        integrationRef.IntegrationNodes.Add(new IntegrationNode());
        StorageService.SaveToSessionStorage();
        RenderService.Redraw();
    }

}